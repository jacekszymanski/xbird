#summary Running the XML database server and accessing to it -- Client/Server API
#labels Phase-Implementation,Featured

== Introduction ==

The XBird engine has the following three facilities: XQuery query (file/stream)  processor, client/server XML native database and embedded XML database. 

This document introduces a way to run the XML database server and lectures how to access the database in client/server fashion. XBird uses RMI as the internal protocol of remote access, and hence, the embedded access achieved in the same way.

== Preparation == 

Download [http://code.google.com/p/xbird/downloads/list xbird-xx-src.zip] and unzip it. We assume the decompressed directory as $XBIRD_HOME in this document.

Then, put [http://code.google.com/p/xbird/source/browse/trunk/xbird-open/target/ xbird-open-xx.jar] into the target directory in $XBIRD_HOME.

== Configuring the Server ==

To appear.

== Running the Server ==

==== a) Running server by a command line ====

On the $XBIRD_HOME/bin directory, the following command starts the database server.
{{{
-- on windows
$ server.bat 
-- on unix
$ ./server.sh
}}}

==== b) Managing a server instance in System Tray ====

==== c) Running a server in user program ====

== Accessing to the Server == 

{{{
XQEngine engine = new XQEngineClient("//knuth.naist.jp:1099/xbird/srv-01");
QueryRequest request1 = new QueryRequest("1+2", ReturnType.REMOTE_SEQUENCE);
Object result1 = engine.execute(request1);
RemoteSequence remoteSequence = (RemoteSequence) result1;

IFocus<Item> focus = remoteSequence.iterator();
Assert.assertEquals(new XInteger(3), focus.next());
Assert.assertFalse(focus.hasNext());
}}}

== Running Examples ==
  * [http://code.google.com/p/xbird/source/browse/trunk/xbird-open/main/test/java/scenario/engine/XQEngineClientTest.java XQEngineClientTest.java] - _contains several examples for a client._